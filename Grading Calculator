import tkinter as tk
from tkinter import simpledialog

class GradingCalculator:
    def __init__(self, root):

        self.root = root
        self.root.title("Average Grade and GPA Calculator")

        self.title_label = tk.Label(self.root, text = "Average Grade and GPA Calculator")
        self.title_label.pack()

        self.frame_average = tk.Frame(self.root)
        self.frame_average.pack(pady = 30)

        self.label_courses_average = tk.Label(self.frame_average, text = "Number of Courses for Average Grade: ")
        self.label_courses_average.grid(row = 0, column = 0)

        self.num_courses_average = tk.IntVar(value = 1)
        self.entry_courses_average = tk.Entry(self.frame_average, textvariable = self.num_courses_average)
        self.entry_courses_average.grid(row = 0, column = 1)

        self.calculate_average_button = tk.Button(self.frame_average, text = "Calculate Average Grades", command = self.calculate_average)
        self.calculate_average_button.grid(row = 1, column = 0)

        self.average_grade_label = tk.Label(self.root, text = "")
        self.average_grade_label.pack()

        self.frame_gpa = tk.Frame(self.root)
        self.frame_gpa.pack(pady = 30)

        self.label_courses_gpa = tk.Label(self.frame_gpa, text = "Number of Courses for GPA: ")
        self.label_courses_gpa.grid(row = 2, column = 0)

        self.num_courses_gpa = tk.IntVar(value = 1)
        self.entry_courses_gpa = tk.Entry(self.frame_gpa, textvariable = self.num_courses_gpa)
        self.entry_courses_gpa.grid(row = 2, column = 1)

        self.calculate_gpa_button = tk.Button(self.frame_gpa, text = "Calculate GPA", command = self.calculate_gpa)
        self.calculate_gpa_button.grid(row = 3, column = 0)

        self.gpa_label = tk.Label(self.root, text = "")
        self.gpa_label.pack()
        
    def calculate_average(self):

        #Use try-except for catching errors.
        try:
            #Retreive number of courses entered.
            num_courses1 = self.num_courses_average.get()
            #Initialize new variable: total_grades.
            total_grades = 0.0
            for _ in range(num_courses1):
                #Create new entry box for entering the grade percentage for each course.
                grade_percentage = simpledialog.askfloat(title="Grade Percentage", prompt="Enter your grade percentage for this course : ")
                #Calculation for grade average -->
                total_grades += grade_percentage
            average_grade = total_grades / num_courses1
            average_letter_grade = self.points_to_letterGrade(average_grade)
            #Display average grade result.
            self.average_grade_label.config(text = "Average Grade: " + (str(round(average_grade, 2))) + " = " + average_letter_grade)
        except ValueError:
            pass
           

    def calculate_gpa(self):
        #Use try-except for catching errors.
        try:
            #Retreive number of courses entered.
            num_courses2 = self.num_courses_gpa.get()
            #Initialize new variables: total_gradepoints and total_credits.
            total_gradePoints = 0
            total_credits = 0
            for _ in range(num_courses2):
                #Create new entry box for entering the letter grade for each course.
                letter_grade = simpledialog.askstring(title = "Letter Grade", prompt = "Enter your letter grade for this course: ")
                grade_points = self.grade_points(letter_grade)
                #Create new entry box for entering amount of credits per course.
                course_credits = simpledialog.askfloat(title = "Credits", prompt = "Enter the amount of credits for this course: ")
                #Calculation for gpa -->
                total_gradePoints += grade_points * course_credits
                total_credits += course_credits
            gpa = total_gradePoints / total_credits
            self.gpa_label.config(text = "GPA: " + str(round(gpa, 2)))
        except ValueError:
            pass
                                  
    #Convertion for the grading scale.
    def points_to_letterGrade(self, average_letter_grade):
        if (average_letter_grade>= 90):
            return "A"
        elif (average_letter_grade >= 80):
            return "B"
        elif (average_letter_grade >= 70):
            return "C"
        elif (average_letter_grade >= 60):
            return "D"
        else:
            return "F"
    #Convertion for letter grade to GPA.
    def grade_points(self, letter_grade):
        if letter_grade.upper() == "A":
            return 4.0
        elif letter_grade.upper() == "B":
            return 3.0
        elif letter_grade.upper() == "C":
            return 2.0
        elif letter_grade.upper() == "D":
            return 1.0
        else:
            return 0.0
        return None

if __name__ == "__main__":
    root = tk.Tk()
    calculator = GradingCalculator(root)
    root.mainloop()

        
        
        
